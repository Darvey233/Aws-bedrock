{"filter":false,"title":"image_understanding_lib.py","tooltip":"/workshop/labs/image_understanding/image_understanding_lib.py","undoManager":{"mark":5,"position":5,"stack":[[{"start":{"row":0,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["import boto3","import json","import base64","from io import BytesIO","","","#get a BytesIO object from file bytes","def get_bytesio_from_bytes(image_bytes):","    image_io = BytesIO(image_bytes)","    return image_io","","","#get a base64-encoded string from file bytes","def get_base64_from_bytes(image_bytes):","    resized_io = get_bytesio_from_bytes(image_bytes)","    img_str = base64.b64encode(resized_io.getvalue()).decode(\"utf-8\")","    return img_str","","","#load the bytes from a file on disk","def get_bytes_from_file(file_path):","    with open(file_path, \"rb\") as image_file:","        file_bytes = image_file.read()","    return file_bytes","",""],"id":1}],[{"start":{"row":25,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":26,"column":0},"end":{"row":57,"column":0},"action":"insert","lines":["#get the stringified request body for the InvokeModel API call","def get_image_understanding_request_body(prompt, image_bytes=None, mask_prompt=None, negative_prompt=None):","    input_image_base64 = get_base64_from_bytes(image_bytes)","    ","    body = {","        \"anthropic_version\": \"bedrock-2023-05-31\",","        \"max_tokens\": 2000,","        \"temperature\": 0,","        \"messages\": [","            {","                \"role\": \"user\",","                \"content\": [","                    {","                        \"type\": \"image\",","                        \"source\": {","                            \"type\": \"base64\",","                            \"media_type\": \"image/jpeg\", #this doesn't seem to matter?","                            \"data\": input_image_base64,","                        },","                    },","                    {","                        \"type\": \"text\",","                        \"text\": prompt","                    }","                ],","            }","        ],","    }","    ","    return json.dumps(body)","",""],"id":3}],[{"start":{"row":57,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":58,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["#generate a response using Anthropic Claude","def get_response_from_model(prompt_content, image_bytes, mask_prompt=None):","    session = boto3.Session()","    ","    bedrock = session.client(service_name='bedrock-runtime') #creates a Bedrock client","    ","    body = get_image_understanding_request_body(prompt_content, image_bytes, mask_prompt=mask_prompt)","    ","    response = bedrock.invoke_model(body=body, modelId=\"anthropic.claude-3-sonnet-20240229-v1:0\", contentType=\"application/json\", accept=\"application/json\")","    ","    response_body = json.loads(response.get('body').read()) # read the response","    ","    output = response_body['content'][0]['text']","    ","    return output","",""],"id":5}],[{"start":{"row":74,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["",""],"id":6}]]},"ace":{"folds":[],"scrolltop":756,"scrollleft":0,"selection":{"start":{"row":75,"column":0},"end":{"row":75,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":67,"state":"start","mode":"ace/mode/python"}},"timestamp":1716777226056,"hash":"c6a5e13eecdd27a650cfe909f3487c86cf6c96b8"}